use sakila;

select * from actor;

create table arquivo1(
codigo int primary key auto_increment,
nome varchar(50)
);

create table arquivo2(
codigo int primary key auto_increment,
nome varchar(50)
);

insert into arquivo1 (nome) values ('Fernanda'), ('Josefa'), ('Luiz'), ('Fernando'), ('Romulo');

insert into arquivo2 (nome) values ('Carlos'), ('Manoel'), ('Luiz'), ('Fernando'), ('Romulo');
                                    
select * from arquivo2;

-- Codigo para mostrar o valor que exite nas duas tabelas
select arquivo1.nome,arquivo2.nome from arquivo1 
inner join arquivo2 on arquivo1.nome = arquivo2.nome;

-- Código para mostrar todos os arquivos na primeira tabela e só uma coluna na segunda
select arquivo1.*,arquivo2.nome from arquivo1 
inner join arquivo2 on arquivo1.nome = arquivo2.nome;

-- Código para comparar as duas tabelas e mostrar apenas a primeira 
select arquivo1.nome from arquivo1 
inner join arquivo2 on arquivo1.nome = arquivo2.nome;

-- Código para listar o arquivo1 completo onde o valor do arquivo2 com o comando. 
select arquivo1.*,arquivo2.nome from arquivo1 
left join arquivo2 on arquivo1.nome = arquivo2.nome
where arquivo2.nome is null;

-- Mostrar a primeira tabela depois do from e a segunda com o comando. 
select arquivo1.nome,arquivo2.nome from arquivo1 
left join arquivo2 on arquivo1.nome = arquivo2.nome;

select arquivo1.nome,arquivo2.nome from arquivo1 
right join arquivo2 on arquivo1.nome = arquivo2.nome;

select * from actor;
-- Criar uma cópia da tabalha com as colunas first_name, last_name da tabela actor
create table ator as select first_name,last_name from actor; 
select * from ator;

-- Criar uma tabela que atualiza sempre que for chamada com base na tabela actor 
create view lista_ator as select * from actor; 

-- Mostrar todas as tabelas do banco o que e Table end View
show full tables ;

select * from actor;
update actor set first_name = 'Teste' where actor_id = 1;
select * from ator;
select * from lista_ator;

select * from customer;
describe customer;
select * from address;
describe address;

-- Criar uma lista com os campos de duas tabelas fazendo comparação de clientes 
select customer.customer_id as Codigo, 
	customer.first_name as Nome, 
    customer.last_name as Sobrenome, 
    address.address as Endereco, 
	address.district as bairro 
	from customer 
inner join address on customer.customer_id = address.address_id;

-- Padronizar uma visualização que atualiza sempre com algumas colunas de duas tabelas
create view dados_ator as select customer.customer_id as Codigo, 
	customer.first_name as Nome, 
    customer.last_name as Sobrenome, 
    address.address as Endereco, 
	address.district as bairro 
	from customer 
inner join address on customer.customer_id = address.address_id;

select * from dados_ator;

create view dados_ator2 as select customer.customer_id as Codigo, 
	concat(customer.first_name,' ', customer.last_name) as Nome, 
	address.address as Endereco, 
	address.district as bairro 
	from customer 
inner join address on customer.customer_id = address.address_id;

select * from dados_ator2;

-- Para acessar outro banco que não está em uso. 
select * from clinica.paciente 
	inner join sakila.arquivo1 
    on clinica.paciente.codp = sakila.arquivo1.codigo;
    
    